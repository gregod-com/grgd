name: Go

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Build
      run: |
        env GOOS=linux GOARCH=amd64 go build -o dist/grgd-linux-amd64-${{ steps.get_version.outputs.VERSION }} .
        env GOOS=darwin GOARCH=amd64 go build -o dist/grgd-darwin-amd64-${{ steps.get_version.outputs.VERSION }} .
        env GOOS=freebsd GOARCH=amd64 go build -o dist/grgd-freebsd-amd64-${{ steps.get_version.outputs.VERSION }} .

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: grgd-darwin-amd64-${{ steps.get_version.outputs.VERSION }}
        path: dist/grgd-darwin-amd64-${{ steps.get_version.outputs.VERSION }}

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: grgd-linux-amd64-${{ steps.get_version.outputs.VERSION }}
        path: dist/grgd-linux-amd64-${{ steps.get_version.outputs.VERSION }}

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: grgd-freebsd-amd64-${{ steps.get_version.outputs.VERSION }}
        path: dist/grgd-freebsd-amd64-${{ steps.get_version.outputs.VERSION }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE
