// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/ICMDPlugin.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockICMDPlugin is a mock of ICMDPlugin interface
type MockICMDPlugin struct {
	ctrl     *gomock.Controller
	recorder *MockICMDPluginMockRecorder
}

// MockICMDPluginMockRecorder is the mock recorder for MockICMDPlugin
type MockICMDPluginMockRecorder struct {
	mock *MockICMDPlugin
}

// NewMockICMDPlugin creates a new mock instance
func NewMockICMDPlugin(ctrl *gomock.Controller) *MockICMDPlugin {
	mock := &MockICMDPlugin{ctrl: ctrl}
	mock.recorder = &MockICMDPluginMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockICMDPlugin) EXPECT() *MockICMDPluginMockRecorder {
	return m.recorder
}

// GetCommands mocks base method
func (m *MockICMDPlugin) GetCommands(i interface{}) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCommands", i)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetCommands indicates an expected call of GetCommands
func (mr *MockICMDPluginMockRecorder) GetCommands(i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCommands", reflect.TypeOf((*MockICMDPlugin)(nil).GetCommands), i)
}
