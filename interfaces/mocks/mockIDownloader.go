// Code generated by MockGen. DO NOT EDIT.
// Source: IDownloader.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDownloader is a mock of IDownloader interface
type MockIDownloader struct {
	ctrl     *gomock.Controller
	recorder *MockIDownloaderMockRecorder
}

// MockIDownloaderMockRecorder is the mock recorder for MockIDownloader
type MockIDownloaderMockRecorder struct {
	mock *MockIDownloader
}

// NewMockIDownloader creates a new mock instance
func NewMockIDownloader(ctrl *gomock.Controller) *MockIDownloader {
	mock := &MockIDownloader{ctrl: ctrl}
	mock.recorder = &MockIDownloaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDownloader) EXPECT() *MockIDownloaderMockRecorder {
	return m.recorder
}

// Load mocks base method
func (m *MockIDownloader) Load(filepath, url string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load", filepath, url)
	ret0, _ := ret[0].(error)
	return ret0
}

// Load indicates an expected call of Load
func (mr *MockIDownloaderMockRecorder) Load(filepath, url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockIDownloader)(nil).Load), filepath, url)
}
